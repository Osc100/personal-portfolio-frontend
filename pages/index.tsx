import type { NextPage } from "next";
import Head from "next/head";
import SkillCard from "../components/SkillCard";
import Navbar from "../components/Navbar";
import { useTranslation } from "next-i18next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { Fragment, useState } from "react";
import iconArray from "../consts/iconArray";
import { useRouter } from "next/router";

export async function getStaticProps({ locale }: { locale: string; }) {
  return {
    props: {
      ...(await serverSideTranslations(locale, ["common", "index"])),
    },
  };
}

const Home: NextPage = () => {
  const { t: tc } = useTranslation("common");
  const [skillActive, setSkillActive] = useState(-1);
  const { locale } = useRouter();

  setTimeout(() => { }, 500);

  return (
    <Fragment>
      <Head>
        <title>{tc`metaTitle`}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />

      <main className="pt-24 z-0">
        <h1 className="text-4xl my-8 text-center text-accent">Relevant Skills</h1>

        <div className="flex items-center flex-col pt-6 z-[1]">
          <div className="grid xl:grid-cols-4 grid-cols-2 gap-8">
            {
              iconArray.map((obj, index) => {
                const isActive = index === skillActive;

                return (
                  <SkillCard
                    key={"s-" + index}
                    title={obj.title}
                    onMouseEnter={() => setSkillActive(index)}
                    onMouseLeave={() => setSkillActive(-1)}
                    isActive={isActive}
                    description={locale === 'en' ? obj.description : obj.descriptionES}
                    descriptionLeft={index % 2 === 0}
                    containerClasses={
                      skillActive < 0
                        ? 'transition-transform delay-[350ms] duration-500'
                        : isActive
                          ? 'transition ease-in-out delay-150 scale-[1.4] z-30 duration-300'
                          : 'transition ease-in-out opacity-60'}
                  >
                    {/* necessary comment so tailwind creates the css clases
                        ' text-blue-400 text-orange-500 text-blue-500 text-yellow-500'; */}
                    <obj.icon
                      className={`xl:text-8xl text-5xl ${obj.classNames}`}
                    />
                  </SkillCard>

                );
              })
            }
          </div>
        </div>
      </main>

      <footer className=" pt-24">asdw</footer>
    </Fragment>
  );
};
export default Home;
